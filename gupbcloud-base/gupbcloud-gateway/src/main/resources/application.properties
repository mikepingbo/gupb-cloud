server.port=20060
spring.application.name=gupbcloud-gateway

#请求匹配
spring.cloud.gateway.routes[0].id=gupbcloud_admin
spring.cloud.gateway.routes[0].uri=lb://gupbcloud-admin
spring.cloud.gateway.routes[0].predicates[0]=Path=/gupb/admin/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[1].id=gupbcloud_seller
spring.cloud.gateway.routes[1].uri=lb://gupbcloud-seller
spring.cloud.gateway.routes[1].predicates[0]=Path=/gupb/seller/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[2].id=gupbcloud_order
spring.cloud.gateway.routes[2].uri=lb://gupbcloud-order
spring.cloud.gateway.routes[2].predicates[0]=Path=/gupb/order/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[3].id=gupbcloud_account
spring.cloud.gateway.routes[3].uri=lb://gupbcloud-account
spring.cloud.gateway.routes[3].predicates[0]=Path=/gupb/account/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[4].id=gupbcloud_inventory
spring.cloud.gateway.routes[4].uri=lb://gupbcloud-inventory
spring.cloud.gateway.routes[4].predicates[0]=Path=/gupb/inventory/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[5].id=gupbcloud_sso
spring.cloud.gateway.routes[5].uri=lb://gupbcloud-sso
spring.cloud.gateway.routes[5].predicates[0]=Path=/gupb/sso/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[6].id=gupbcloud_search
spring.cloud.gateway.routes[6].uri=lb://gupbcloud-search
spring.cloud.gateway.routes[6].predicates[0]=Path=/gupb/search/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=2

#重试
spring.cloud.gateway.routes[0].filters[0].name=Retry
spring.cloud.gateway.routes[0].filters[0].args.retries=3
spring.cloud.gateway.routes[0].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[1].filters[0].name=Retry
spring.cloud.gateway.routes[1].filters[0].args.retries=3
spring.cloud.gateway.routes[1].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[2].filters[0].name=Retry
spring.cloud.gateway.routes[2].filters[0].args.retries=3
spring.cloud.gateway.routes[2].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[3].filters[0].name=Retry
spring.cloud.gateway.routes[3].filters[0].args.retries=3
spring.cloud.gateway.routes[3].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[4].filters[0].name=Retry
spring.cloud.gateway.routes[4].filters[0].args.retries=3
spring.cloud.gateway.routes[4].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[5].filters[0].name=Retry
spring.cloud.gateway.routes[5].filters[0].args.retries=3
spring.cloud.gateway.routes[5].filters[0].args.statuses=BAD_GATEWAY
spring.cloud.gateway.routes[6].filters[0].name=Retry
spring.cloud.gateway.routes[6].filters[0].args.retries=3
spring.cloud.gateway.routes[6].filters[0].args.statuses=BAD_GATEWAY

#熔断
spring.cloud.gateway.routes[0].filters[1].name=Hystrix
spring.cloud.gateway.routes[0].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[1].filters[1].name=Hystrix
spring.cloud.gateway.routes[1].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[2].filters[1].name=Hystrix
spring.cloud.gateway.routes[2].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[3].filters[1].name=Hystrix
spring.cloud.gateway.routes[3].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[3].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[4].filters[1].name=Hystrix
spring.cloud.gateway.routes[4].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[4].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[5].filters[1].name=Hystrix
spring.cloud.gateway.routes[5].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[5].filters[1].args.fallbackUri=forward:/fallback
spring.cloud.gateway.routes[6].filters[1].name=Hystrix
spring.cloud.gateway.routes[6].filters[1].args.name=fallbackcmd
spring.cloud.gateway.routes[6].filters[1].args.fallbackUri=forward:/fallback

# 限流
spring.cloud.gateway.routes[0].filters[2].name=RequestRateLimiter
# 令牌桶每秒填充平均速率 测试用数据，生产要确定好值
spring.cloud.gateway.routes[0].filters[2].args.redis-rate-limiter.replenishRate=1
# 令牌桶总容量 测试用数据，生产要确定好值
spring.cloud.gateway.routes[0].filters[2].args.redis-rate-limiter.burstCapacity=3
# 用于限流的键的解析器的 Bean 对象名字 它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
# 默认情况下，使用PrincipalNameKeyResolver，以请求认证的java.security.Principal作为限流键。
spring.cloud.gateway.routes[0].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[0].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[1].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[1].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[1].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[1].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[1].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[2].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[2].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[2].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[2].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[2].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[3].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[3].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[3].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[3].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[3].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[4].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[4].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[4].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[4].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[4].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[5].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[5].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[5].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[5].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[5].filters[2]=StripPrefix=2
spring.cloud.gateway.routes[6].filters[2].name=RequestRateLimiter
spring.cloud.gateway.routes[6].filters[2].args.redis-rate-limiter.replenishRate=1
spring.cloud.gateway.routes[6].filters[2].args.redis-rate-limiter.burstCapacity=3
spring.cloud.gateway.routes[6].filters[2].args.key-resolver='#{@hostAddrKeyResolver}'
spring.cloud.gateway.routes[6].filters[2]=StripPrefix=2

#熔断设置：超时时间和最大连接数
hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds=5000
hystrix.command.fallbackcmd.execution.isolation.thread.maxConcurrentRequests=500

logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.http.server.reactive=DEBUG
logging.level.org.springframework.web.reactive=DEBUG
logging.level.reactor.ipc.netty=DEBUG

#支持@Bean生效，执行
spring.main.allow-bean-definition-overriding=true

#redis
#共有配置
spring.redis.max-active=50
spring.redis.max-wait=10000
spring.redis.max-idle=8
spring.redis.min-idle=0
spring.redis.timeout=200

#开发缓存redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0

#prometheus配置
management.endpoints.web.exposure.include=*

logging.config = classpath:logback-boot.xml
log.path=/root/server/logs
log.level=info