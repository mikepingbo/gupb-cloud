server.tomcat.max-threads=500
server.tomcat.max-connections=8000

server.port=20020
spring.application.name=gupbcloud-zuul

zuul.ignored-services=*
zuul.sensitive-headers=

zuul.routes.gupb-sso.service-id=gupbcloud-sso
zuul.routes.gupb-sso.path=/gupb/sso/**
zuul.routes.gupb-order.service-id=gupbcloud-order
zuul.routes.gupb-order.path=/gupb/order/**
zuul.routes.gupb-account.service-id=gupbcloud-account
zuul.routes.gupb-account.path=/gupb/account/**
zuul.routes.gupb-inventory.service-id=gupbcloud-inventory
zuul.routes.gupb-inventory.path=/gupb/inventory/**

zuul.routes.gupb-admin.service-id=gupbcloud-admin
zuul.routes.gupb-admin.path=/gupb/admin/**
zuul.routes.gupb-seller.service-id=gupbcloud-seller
zuul.routes.gupb-seller.path=/gupb/seller/**

zuul.retryable=true
zuul.host.connectTimeoutMillis=2000
spring.cloud.loadbalancer.retry.enabled=true
ribbon.ConnectTimeout=2000
ribbon.ReadTimeout=2000
ribbon.SocketTimeout=2000
ribbon.MaxAutoRetries=1
ribbon.MaxAutoRetriesNextServer=1
ribbon.kToRetryOnAllOperations=true

#redis
#共有配置
spring.redis.max-active=50
spring.redis.max-wait=10000
spring.redis.max-idle=8
spring.redis.min-idle=0
spring.redis.timeout=200

#开发缓存redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.database=0

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#并发请求最大数量
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=500

#网管一般用信号量隔离策略
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
# 网关并发数，达到500并发会触发hystrix熔断
zuul.semaphore.max-semaphores=500
#[优先级1]zuul.eureka.api.semaphore.maxSemaphores
#[优先级2]zuul.semaphore.max-semaphores
#[优先级3]hystrix.command.api.execution.isolation.semaphore.maxConcurrentRequests
#[优先级4]hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests

#prometheus配置
management.endpoints.web.exposure.include=*

logging.config = classpath:logback-boot.xml
log.path=/root/server/logs
log.level=info

server.tomcat.uri-encoding=UTF-8
spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=kafka
spring.zipkin.kafka.topic=zipkin
spring.kafka.bootstrap-servers=localhost:9092
management.endpoint.health.show-details=ALWAYS
eureka.instance.lease-expiration-duration-in-seconds=15
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.prefer-ip-address=true
eureka.instance.health-check-url-path=/actuator/health
eureka.client.registry-fetch-interval-seconds=5